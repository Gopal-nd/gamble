generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  balance       Float     @default(0)
  games         Game[]
  transactions  Transaction[]
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                 String  @id @default(uuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Game {
  id        String   @id @default(uuid())
  email     String
  user      User     @relation(fields: [email], references: [email], onDelete: Cascade)
  result    String
  betAmount Float
  outcome   String
  createdAt DateTime @default(now())
}

model Transaction {
  id              String   @id @default(uuid())
  email           String
  user            User     @relation(fields: [email], references: [email], onDelete: Cascade)
  amount          Float
  type            TransactionType
  status          TransactionStatus
  razorpayOrderId String?
  upiId           String?
  createdAt       DateTime @default(now())
}

enum TransactionType {
  deposit
  withdrawal
}

enum TransactionStatus {
  pending
  completed
  failed
}
